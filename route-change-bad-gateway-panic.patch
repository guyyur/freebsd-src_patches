Index: sys/net/route.c
===================================================================
--- sys/net/route.c	(revision 303766)
+++ sys/net/route.c	(working copy)
@@ -444,6 +444,7 @@ rtalloc1_fib(struct sockaddr *dst, int report, u_l
 	struct rtentry *newrt;
 	struct rt_addrinfo info;
 	int err = 0, msgtype = RTM_MISS;
+	int needlock;
 
 	KASSERT((fibnum < rt_numfibs), ("rtalloc1_fib: bad fibnum"));
 	rh = rt_tables_get_rnh(fibnum, dst->sa_family);
@@ -454,16 +455,23 @@ rtalloc1_fib(struct sockaddr *dst, int report, u_l
 	/*
 	 * Look up the address in the table for that Address Family
 	 */
-	RIB_RLOCK(rh);
+	needlock = !(ignflags & RTF_RNH_LOCKED);
+	if (needlock)
+		RIB_RLOCK(rh);
+#ifdef INVARIANTS
+	else
+		RIB_LOCK_ASSERT(rh);
+#endif
 	rn = rh->rnh_matchaddr(dst, &rh->head);
 	if (rn && ((rn->rn_flags & RNF_ROOT) == 0)) {
 		newrt = RNTORT(rn);
 		RT_LOCK(newrt);
 		RT_ADDREF(newrt);
-		RIB_RUNLOCK(rh);
+		if (needlock)
+			RIB_RUNLOCK(rh);
 		return (newrt);
 
-	} else
+	} else if (needlock)
 		RIB_RUNLOCK(rh);
 	
 	/*
@@ -749,7 +757,7 @@ ifa_ifwithroute(int flags, const struct sockaddr *
 	if (ifa == NULL)
 		ifa = ifa_ifwithnet(gateway, 0, fibnum);
 	if (ifa == NULL) {
-		struct rtentry *rt = rtalloc1_fib(gateway, 0, 0, fibnum);
+		struct rtentry *rt = rtalloc1_fib(gateway, 0, flags, fibnum);
 		if (rt == NULL)
 			return (NULL);
 		/*
@@ -1840,6 +1848,8 @@ rtrequest1_fib_change(struct rib_head *rnh, struct
 	    (info->rti_info[RTAX_IFA] != NULL &&
 	     !sa_equal(info->rti_info[RTAX_IFA], rt->rt_ifa->ifa_addr))) {
 
+		info->rti_flags |= RTF_RNH_LOCKED;
+
 		error = rt_getifa_fib(info, fibnum);
 		if (info->rti_ifa != NULL)
 			free_ifa = 1;
@@ -1846,6 +1856,8 @@ rtrequest1_fib_change(struct rib_head *rnh, struct
 
 		if (error != 0)
 			goto bad;
+
+		info->rti_flags &= ~RTF_RNH_LOCKED;
 	}
 
 	/* Check if outgoing interface has changed */
Index: sys/net/route.h
===================================================================
--- sys/net/route.h	(revision 303766)
+++ sys/net/route.h	(working copy)
@@ -189,7 +189,7 @@ struct rtentry {
 					/* 0x8000000 and up unassigned */
 #define	RTF_STICKY	 0x10000000	/* always route dst->src */
 
-#define	RTF_RNH_LOCKED	 0x40000000	/* unused */
+#define	RTF_RNH_LOCKED	 0x40000000	/* radix node head is locked */
 
 #define	RTF_GWFLAG_COMPAT 0x80000000	/* a compatibility bit for interacting
 					   with existing routing apps */
