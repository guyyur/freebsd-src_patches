--- share/man/man4/ip6.4.v1.25	2017-03-11 09:43:17.702712000 +0200
+++ share/man/man4/ip6.4	2017-03-11 10:19:20.670658000 +0200
@@ -244,7 +244,7 @@ Use a high range (varies, see
 Use a low, reserved range (600\-1023, see
 .Xr ip 4 ) .
 .El
-.It Dv IPV6_PKTINFO Fa "int *"
+.It Dv IPV6_RECVPKTINFO Fa "int *"
 Get or set whether additional information about subsequent packets will
 be provided as ancillary data along with the payload in subsequent
 .Xr recvmsg 2
@@ -257,7 +257,10 @@ struct in6_pktinfo {
 	unsigned int    ipi6_ifindex; /* send/recv if index */
 };
 .Ed
-.It Dv IPV6_HOPLIMIT Fa "int *"
+.Pp
+Turning this option on will result in this socket getting cmsg data of
+type IPV6_PKTINFO.
+.It Dv IPV6_RECVHOPLIMIT Fa "int *"
 Get or set whether the hop limit header field from subsequent packets
 will be provided as ancillary data along with the payload in subsequent
 .Xr recvmsg 2
@@ -265,6 +268,8 @@ calls.
 The value is stored as an
 .Vt int
 in the ancillary data returned.
+Turning this option on will result in this socket getting cmsg data of
+type IPV6_HOPLIMIT.
 .\" .It Dv IPV6_NEXTHOP Fa "int *"
 .\" Get or set whether the address of the next hop for subsequent
 .\" packets will be provided as ancillary data along with the payload in
@@ -276,7 +281,7 @@ in the ancillary data returned.
 .\" structure in the ancillary data returned.
 .\" .Pp
 .\" This option requires superuser privileges.
-.It Dv IPV6_HOPOPTS Fa "int *"
+.It Dv IPV6_RECVHOPOPTS Fa "int *"
 Get or set whether the hop-by-hop options from subsequent packets will be
 provided as ancillary data along with the payload in subsequent
 .Xr recvmsg 2
@@ -296,7 +301,9 @@ The
 routine and family of routines may be used to manipulate this data.
 .Pp
 This option requires superuser privileges.
-.It Dv IPV6_DSTOPTS Fa "int *"
+Turning this option on will result in this socket getting cmsg data of
+type IPV6_HOPOPTS.
+.It Dv IPV6_RECVDSTOPTS Fa "int *"
 Get or set whether the destination options from subsequent packets will
 be provided as ancillary data along with the payload in subsequent
 .Xr recvmsg 2
@@ -316,6 +323,8 @@ The
 routine and family of routines may be used to manipulate this data.
 .Pp
 This option requires superuser privileges.
+Turning this option on will result in this socket getting cmsg data of
+type IPV6_DSTOPTS.
 .It Dv IPV6_TCLASS Fa "int *"
 Get or set the value of the traffic class field used for outgoing datagrams
 on this socket.
@@ -328,7 +337,7 @@ provided as ancillary data along with the payload in s
 calls.
 The header field is stored as a single value of type
 .Vt int .
-.It Dv IPV6_RTHDR Fa "int *"
+.It Dv IPV6_RECVRTHDR Fa "int *"
 Get or set whether the routing header from subsequent packets will be
 provided as ancillary data along with the payload in subsequent
 .Xr recvmsg 2
@@ -350,6 +359,8 @@ The
 routine and family of routines may be used to manipulate this data.
 .Pp
 This option requires superuser privileges.
+Turning this option on will result in this socket getting cmsg data of
+type IPV6_RTHDR.
 .It Dv IPV6_PKTOPTIONS Fa "struct cmsghdr *"
 Get or set all header options and extension headers at one time on the
 last packet sent or received on the socket.
@@ -416,11 +427,11 @@ level.
 .El
 .Pp
 The
-.Dv IPV6_PKTINFO ,
-.\" .Dv IPV6_NEXTHOP ,
-.Dv IPV6_HOPLIMIT ,
-.Dv IPV6_HOPOPTS ,
-.Dv IPV6_DSTOPTS ,
+.Dv IPV6_RECVPKTINFO ,
+.\" .Dv IPV6_RECVNEXTHOP ,
+.Dv IPV6_RECVHOPLIMIT ,
+.Dv IPV6_RECVHOPOPTS ,
+.Dv IPV6_RECVDSTOPTS ,
 and
 .Dv IPV6_RTHDR
 options will return ancillary data along with payload contents in subsequent
@@ -432,7 +443,7 @@ set to
 and
 .Va cmsg_type
 set to respective option name value (e.g.,
-.Dv IPV6_HOPTLIMIT ) .
+.Dv IPV6_HOPLIMIT ) .
 These options may also be used directly as ancillary
 .Va cmsg_type
 values in
@@ -458,7 +469,7 @@ A good example is the outgoing interface for multicast
 can be set by the
 .Dv IPV6_MULTICAST_IF
 socket option, through the
-.Dv IPV6_PKTINFO
+.Dv IPV6_RECVPKTINFO
 option, and through the
 .Va sin6_scope_id
 field of the socket address passed to the
@@ -594,7 +605,7 @@ m.msg_controllen = sizeof(buf);
  * returned along with the payload.
  */
 optval = 1;
-if (setsockopt(s, IPPROTO_IPV6, IPV6_HOPLIMIT, &optval,
+if (setsockopt(s, IPPROTO_IPV6, IPV6_RECVHOPLIMIT, &optval,
     sizeof(optval)) == -1)
 	err(1, "setsockopt");
 
@@ -662,13 +673,6 @@ An ancillary data object was improperly formed.
 .Xr netintro 4 ,
 .Xr tcp 4 ,
 .Xr udp 4
-.Rs
-.%A W. Stevens
-.%A M. Thomas
-.%T Advanced Sockets API for IPv6
-.%R RFC 2292
-.%D February 1998
-.Re
 .Rs
 .%A S. Deering
 .%A R. Hinden
